// Styles for the Photo Grid
// -------------------------

.node-type-photo-grid {
  margin-top: 0;
  #page-title {
    @include type-with-color(header-1, $white);
    background: rgba($black, 0.4);
    text-transform: uppercase;
    padding-left: 10px;
    padding-top: 100px;
    padding-bottom: 5px;
  }

  #page-description {
    background: rgba($black, 0.4);
    @include type-with-color(body-tall, $white);
    padding-left: 10px;
    padding-right: 10px;
    padding-bottom: 35px;
    margin: 0;
    p:last-child {
      margin: 0;
    }
  }

  .form-select {
    display: none;
  }

  .node-photo-grid {
    background-color: rgba($white, 0.9);
    padding: 10px 15px;
  }

  .item-list {
    padding-top: 6px;
    overflow: hidden;
    top: -6px;
    position: relative;
  }

  .photo-grid-filters {
    cursor: pointer;
    // Needed to remove space between LIs when display inline-block is used.
    // @see http://stackoverflow.com/a/10655413/43
    font-size: 0;
    margin: 0 0 -5px;
    padding-left: $default-margin * 2;
    padding-right: $default-margin * 2;
    text-align: center;
    width: 100%;
    position: relative;
    li {
      @include type(photo-grid-tabs);
      position: relative;
      bottom: 0;
      display: inline-block;
      margin: 0;
      padding: 10px 15px;
      text-transform: uppercase;
      -webkit-font-smoothing: subpixel-antialiased;
      &.first {
        background-color: $grey;
      }

      &:hover,
      &.active {
        bottom: 5px;
        padding-bottom: 15px;
        z-index: 4;
        @include box-shadow(0 15px 40px rgba($black,0.8));
      }

    }

  }

  // This is a really bad to apply this to all field collection wrappers, but
  // there isn't a way to alter the div this class appears on. The wrapper
  // is added in #prefix/#suffix in field_collection_field_formatter_view(),
  // and hook_preprocess_field() can't change prefix or suffix. This will break
  // if another field collection is added to the photo grid. At that point we
  // will need to write some JS that copies a class from the child element of
  // .field-collection-container to itself, with maybe "-wrapper" added.
  .field-collection-container {
    padding-top: 10px;
  }

  // The main wrapper for the photo grid.
  .field-name-field-photos {

    .entity {
      height: 335px;
      margin-bottom: 10px;
      margin-right: 10px;
      overflow: hidden;
      width: 335px;
    }

    .entity .content {
      position: relative;
    }

    .field-name-field-photos-name {
      @include type-with-color(header-2, $white);

      bottom: 20px;
      left: 0px;
      padding-bottom: 10px;
      padding-left: $default-padding;
      padding-top: 10px;
      position: absolute;
      width: 75%;
    }

    .field-name-field-photos-description {
      @include type-with-color(body-smaller, $white);  

      background-color: rgba($black, 0.7);
      bottom: 0;
      display: none;
      left: 0;
      padding-bottom: $default-padding;
      padding-left: 15px;
      padding-right: 15px;
      padding-top: $default-padding;
      position: absolute;
      width: 100%;

      .read-more-button {
        display: block;
      }

    }

    // This just contains data we need.
    .field-name-field-photos-tab {
      display: none;
    }

    .field-name-field-photos-long-description {
      display: none;
    }

    .field-name-field-photos-long-desc-title {
      display: none;
    }

  }

  // In order to zoom the image on hover, we actually display the zoomed image
  // and scale it down with CSS. 
  .field-name-field-photos-image {
    height: 335px;
    overflow: hidden;
    width: 335px;

    img {
      height: 335px;
      width: 335px;
    }
  }

  #sidebar-fly-in {
    background: url(../images/pillars.jpg);
    width: 100%;
    z-index: 10;

    .title {
      padding: $default-margin;
      background-color: rgba($black, 0.4);
      padding-top: 100px;
      text-transform: uppercase;
      h1 {
        @include type-with-color(header-1, $white);
      }
    }

    .body-wrapper {
      background-color: rgba($white, 0.9);
      padding-bottom: 100px;
      padding-top: $default-padding;
    }

    .body {
      @include type(body);
      margin: $default-margin;
      p {
        margin-bottom: 1em;
      }
    }

    .return-button {
      @include sprites-sprite(left-arrow-large);

      display: none;
      height: sprites-sprite-height(left-arrow-large);
      left: 100px;
      position: fixed;
      top: 58%;
      width: sprites-sprite-width(left-arrow-large);
    }

  }

  // Output classes for our seven colors.
  $i: 1;
  @each $tab-color in 
    rgba(251, 195, 1, 1), // #fbc300 (golden)
    rgba(127, 189, 209, 1), // #7fbdd1 (blueish)
    rgba(154, 167, 15, 1), // #9aa70f (puke)
    rgba(157, 21, 21, 1), // #9d1515 (red)
    rgba(126, 89, 143, 1), // #7e598f (purple)
    rgba(184, 66, 1, 1), // #b84201 (bloodsand)
    rgba(73, 174, 165, 1) // #49aea5 (turquoise)
  {
    .tab-color-#{$i} {
      background-color: $tab-color;
    }
    .type-color-faded-#{$i} {
      background-color: rgba($tab-color, 0.7);
    }

    $i: $i + 1;
  }

  // We use the Isotope library for animating the filtering.
  .isotope-item {
    z-index: 2;
  }

  .isotope-hidden.isotope-item {
    pointer-events: none;
    z-index: 1;
  }

  .isotope,
  .isotope .isotope-item {
    /* change duration value to whatever you like */
    -webkit-transition-duration: 0.8s;
       -moz-transition-duration: 0.8s;
        -ms-transition-duration: 0.8s;
         -o-transition-duration: 0.8s;
            transition-duration: 0.8s;
  }

  .isotope {
    -webkit-transition-property: height, width;
       -moz-transition-property: height, width;
        -ms-transition-property: height, width;
         -o-transition-property: height, width;
            transition-property: height, width;
  }

  .isotope .isotope-item {
    -webkit-transition-property: -webkit-transform, opacity;
       -moz-transition-property:    -moz-transform, opacity;
        -ms-transition-property:     -ms-transform, opacity;
         -o-transition-property:      -o-transform, opacity;
            transition-property:         transform, opacity;
  }

  /**** disabling Isotope CSS3 transitions ****/

  .isotope.no-transition,
  .isotope.no-transition .isotope-item,
  .isotope .isotope-item.no-transition {
    -webkit-transition-duration: 0s;
       -moz-transition-duration: 0s;
        -ms-transition-duration: 0s;
         -o-transition-duration: 0s;
            transition-duration: 0s;
  }

}
